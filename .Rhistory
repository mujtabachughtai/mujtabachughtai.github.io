median(98,96,95,93,92,61,49)
data <- (98,96,95,93,92,61,49)
data <- c(98,96,95,93,92,61,49)
sort(data)
median(data)
data <- c(98,96,95,93,92,61,49)
sort(data)
median(data)
7*0.22
data <- c(98,96,95,93,92,61,49)
sort(data)
median(data)
7*0.22
mean(data)
covid19 <- read.table(HM1_Question2.xlsx)
covid19 <- read.table("HM1_Question2.xlsx")
covid19 <- read.table("HM1_Question2.xlsx", header = TRUE)
covid19 <- read.table("HM1_Question2.xlsx", header = FALSE)
install.packages("readxl")
library("readxl")
covid19 <- read.excel("HM1_Question2.xlsx")
library("readxl")
covid19 <- read.excel("HM1_Question2.xlsx")
library("readxl")
library("readxl")
covid19 <- read.excel("HM1_Question2.xlsx")
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
Frequency_Table <- colSums(covid19)
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
table(covid19)
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
margin.table(covid19)
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
table(covid19$`Take Vaccine`, covid19$`US/Outside US`)
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
knitr::kable(table(covid19$`Take Vaccine`, covid19$`US/Outside US`))
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
knitr::kable(table(covid19$`Take Vaccine`, covid19$`US/Outside US`))
View(covid19)
library(ggplot2)
ggplot(covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="identity")+
library(ggplot2)
ggplot(covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="identity")
library(ggplot2)
ggplot(covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="bin")
library(ggplot2)
ggplot(covid19, aes(x = factor(`Take Vaccine`)))+
geom_bar(stat="bin")
library(ggplot2)
ggplot(covid19, aes(x = factor(`Take Vaccine`)))+
geom_bar(stat="count")
library(ggplot2)
ggplot(covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="count")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="count", fill = "blue")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="count") +
scale_fill_brewer(palette="Dark2")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="count", fill = "royalblue3")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="count", fill = "royalblue3", color = "black")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`))+
geom_bar(stat="count", fill = `US/Outside US`, color = "black")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`,fill = `US/Outside US`))+
geom_bar(stat="count", color = "black")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`, fill = `US/Outside US`))+
geom_bar(stat="count", position = position_dodge(), color = "black")
library("readxl")
covid19 <- read_excel("HM1_Question2.xlsx")
knitr::kable(table(covid19$`Take Vaccine`, covid19$`US/Outside US`))
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`, fill = `US/Outside US`)) +
geom_bar(stat="count", position = position_dodge(), color = "black") +
scale_fill_manual("white", "royalblue3")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`, fill = `US/Outside US`)) +
geom_bar(stat="count", position = position_dodge(), color = "black") +
scale_fill_manual("green", "royalblue3")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`, fill = `US/Outside US`)) +
geom_bar(stat="count", position = position_dodge(), color = "black") +
scale_fill_manual(c("green", "royalblue3"))
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`, fill = `US/Outside US`)) +
geom_bar(stat="count", position = position_dodge(), color = "black") +
scale_fill_manual(c("green","white"))
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`, fill = `US/Outside US`)) +
geom_bar(stat="count", position = position_dodge(), color = "black") +
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`))+
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="count", fill = "royalblue3", color = "black")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="count", color = "black") +
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="count", fill = "lightblue", color = "black")
pie(covid19$`Take Vaccine`)
pie(as.factort(covid19$`Take Vaccine`))
pie(as.factor(covid19$`Take Vaccine`))
pie(covid19$`Take Vaccine`)
pie(covid19$`US/Outside US`)
pie(c(5,2,3))
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="identity")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="identity")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="count", fill = "lightblue", color = "black")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="count")
library(ggplot2)
ggplot(data = covid19, aes(x = `Take Vaccine`)) +
geom_bar(stat="count", width = 1) +
coord_polar("y", start = 0)
library(ggplot2)
ggplot(data = covid19, aes(y = `Take Vaccine`)) +
geom_bar(stat="count", width = 1) +
coord_polar("y", start = 0)
library(ggplot2)
ggplot(data = covid19, aes(x = "", y = `Take Vaccine`)) +
geom_bar(stat="count", width = 1) +
coord_polar("y", start = 0)
library(ggplot2)
ggplot(data = covid19, aes(x = "", fill = `Take Vaccine`)) +
geom_bar(stat="count", width = 1) +
coord_polar("y", start = 0)
library(ggplot2)
ggplot(data = covid19, aes(x = "", fill = `Take Vaccine`)) +
geom_bar(stat="count", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = "", fill = `Take Vaccine`)) +
geom_bar(stat="count", width = 1) +
coord_polar("y", start = 0, color = "white") +
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = "", fill = `Take Vaccine`)) +
geom_bar(stat="count", width = 1, color = "white") +
coord_polar("y", start = 0) +
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = "", fill = `Take Vaccine`)) +
geom_bar(stat="count", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = "", fill = `Take Vaccine`)) +
geom_bar(stat="count", width = 1, color = "black") +
coord_polar("y", start = 0) +
scale_fill_brewer()
library(ggplot2)
ggplot(data = covid19, aes(x = "", fill = `Take Vaccine`)) +
geom_bar(stat="count", width = 1, color = "black") +
coord_polar("y", start = 0) +
scale_fill_brewer() +
theme_void() # remove background, grid, numeric labels
qnorm(0.975, 72.4, 3.6)
pnorm(76, 72.4, 3.6)
qnorm(76, 72.4, 3.6)
# Define the values for each column
ids <- rep(1:100, each=16)  # Each ID repeats 16 times
relationships <- c("romantic partner", "close friend", "classmate/colleague", "stranger")
emotions <- c("sympathy", "guilt", "pride", "anger")
# Create combinations of relationships and emotions
combinations <- expand.grid(relationship = relationships, emotion = emotions)
# Replicate the combinations for each person
df <- data.frame(id = ids, relationship = rep(combinations$relationship, times=100), emotion = rep(combinations$emotion, times=100))
View(df)
ids <- rep(1:100, each=16)  # Each ID repeats 16 times
relationships <- c("romantic partner", "close friend", "classmate/colleague", "stranger")
emotions <- c("sympathy", "guilt", "pride", "anger")
combinations <- expand.grid(relationship = relationships, emotion = emotions)
combinations <- combinations[order(combinations$relationship, combinations$emotion), ]
df <- data.frame(id = ids, relationship = rep(combinations$relationship, times=100),
emotion = rep(combinations$emotion, times=100))
View(df)
ids <- rep(1:100, each=16)  # Each ID repeats 16 times
relationships <- c("romantic partner", "close friend", "classmate/colleague", "stranger")
emotions <- c("sympathy", "guilt", "pride", "anger")
combinations <- expand.grid(relationship = relationships, emotion = emotions)
combinations <- combinations[order(combinations$relationship, combinations$emotion), ]
df <- data.frame(id = ids, relationship = rep(combinations$relationship, times=100),
emotion = rep(combinations$emotion, times=100))
df <- df %>%
mutate(
Relationship_Type = case_when(
relationship %in% c("romantic partner", "close friend") ~ "communal",
relationship %in% c("classmate/colleague", "stranger") ~ "transactional",
TRUE ~ NA_character_
),
Emotion_Type = case_when(
emotion %in% c("sympathy", "guilt") ~ "engaging",
emotion %in% c("pride", "anger") ~ "disengaging",
TRUE ~ NA_character_
),
Valence = case_when(
emotion %in% c("sympathy", "pride") ~ "positive",
emotion %in% c("guilt", "anger") ~ "negative",
TRUE ~ NA_character_
)
)
library("tidyverse")
ids <- rep(1:100, each=16)  # Each ID repeats 16 times
relationships <- c("romantic partner", "close friend", "classmate/colleague", "stranger")
emotions <- c("sympathy", "guilt", "pride", "anger")
combinations <- expand.grid(relationship = relationships, emotion = emotions)
combinations <- combinations[order(combinations$relationship, combinations$emotion), ]
df <- data.frame(id = ids, relationship = rep(combinations$relationship, times=100),
emotion = rep(combinations$emotion, times=100))
df <- df %>%
mutate(
Relationship_Type = case_when(
relationship %in% c("romantic partner", "close friend") ~ "communal",
relationship %in% c("classmate/colleague", "stranger") ~ "transactional",
TRUE ~ NA_character_
),
Emotion_Type = case_when(
emotion %in% c("sympathy", "guilt") ~ "engaging",
emotion %in% c("pride", "anger") ~ "disengaging",
TRUE ~ NA_character_
),
Valence = case_when(
emotion %in% c("sympathy", "pride") ~ "positive",
emotion %in% c("guilt", "anger") ~ "negative",
TRUE ~ NA_character_
)
)
View(df)
library("tidyverse")
ids <- rep(1:100, each=16)  # Each ID repeats 16 times
relationships <- c("romantic partner", "close friend", "classmate/colleague", "stranger")
emotions <- c("sympathy", "guilt", "pride", "anger")
combinations <- expand.grid(Relationship = relationships, Emotion = emotions)
combinations <- combinations[order(combinations$Relationship, combinations$Rmotion), ]
library("tidyverse")
ids <- rep(1:100, each=16)  # Each ID repeats 16 times
relationships <- c("romantic partner", "close friend", "classmate/colleague", "stranger")
emotions <- c("sympathy", "guilt", "pride", "anger")
combinations <- expand.grid(Relationship = relationships, Emotion = emotions)
combinations <- combinations[order(combinations$Relationship, combinations$Emotion), ]
df <- data.frame(id = ids, Relationship = rep(combinations$Relationship, times=100),
Emotion = rep(combinations$Emotion, times=100))
df <- df %>%
mutate(
Relationship_Type = case_when(
Relationship %in% c("romantic partner", "close friend") ~ "communal",
Relationship %in% c("classmate/colleague", "stranger") ~ "transactional",
TRUE ~ NA_character_
),
Emotion_Type = case_when(
Emotion %in% c("sympathy", "guilt") ~ "engaging",
Emotion %in% c("pride", "anger") ~ "disengaging",
TRUE ~ NA_character_
),
Valence = case_when(
Emotion %in% c("sympathy", "pride") ~ "positive",
Emotion %in% c("guilt", "anger") ~ "negative",
TRUE ~ NA_character_
)
)
df <- df %>% select(id, relationship, Relationship_Type, everything())
library("tidyverse")
ids <- rep(1:100, each=16)  # Each ID repeats 16 times
relationships <- c("romantic partner", "close friend", "classmate/colleague", "stranger")
emotions <- c("sympathy", "guilt", "pride", "anger")
combinations <- expand.grid(Relationship = relationships, Emotion = emotions)
combinations <- combinations[order(combinations$Relationship, combinations$Emotion), ]
df <- data.frame(id = ids, Relationship = rep(combinations$Relationship, times=100),
Emotion = rep(combinations$Emotion, times=100))
df <- df %>%
mutate(
Relationship_Type = case_when(
Relationship %in% c("romantic partner", "close friend") ~ "communal",
Relationship %in% c("classmate/colleague", "stranger") ~ "transactional",
TRUE ~ NA_character_
),
Emotion_Type = case_when(
Emotion %in% c("sympathy", "guilt") ~ "engaging",
Emotion %in% c("pride", "anger") ~ "disengaging",
TRUE ~ NA_character_
),
Valence = case_when(
Emotion %in% c("sympathy", "pride") ~ "positive",
Emotion %in% c("guilt", "anger") ~ "negative",
TRUE ~ NA_character_
)
)
df <- df %>% select(id, Relationship, Relationship_Type, everything())
View(df)
install.packages("blogdown")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("knitr")
setwd("~/Library/CloudStorage/OneDrive-YaleUniversity/Personal Website/mujtabachughtai.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
